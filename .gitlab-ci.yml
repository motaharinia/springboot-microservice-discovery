stages:
- test
- buildJar
- buildDockerImage
- release
- deploy

variables:
  TEST_IMAGE: https://dockerreg.local:5000/springboot-microservice-discovery:$CI_COMMIT_REF_NAME
  RELEASE_IMAGE: https://dockerreg.local:5000/springboot-microservice-discovery:latest
  DOCKER_DRIVER: overlay2


build-jarfile-tst:
  image: https://dockerreg.local:5000/mvn-archaiva:latest
  stage: buildJar
  tags:
    - build
  artifacts:
    paths:
      - ./target/springboot-microservice-discovery*.jar
    expire_in: 1 week
  script:
    - whoami
    - java -version
    - ls -lah
    - mvn clean package -Pnative,tst -DskipTests
    - ls -lah ./target
  only:
    - develop

build-dockerfile-tst:
  stage: buildDockerImage
  tags:
    - build
  script:
    - whoami
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker build -f ./cicd/Dockerfile-tst --pull  -t $TEST_IMAGE .
    - docker push $TEST_IMAGE
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
  only:
    - develop
    
release-on-tst:
  image: https://dockerreg.local:5000/tiangolo-compose
  stage: release
  tags:
    - deploy
  script:
    - docker  rm -f discovery  || true
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker-compose -f ./cicd/deploy-tst.yml down || true
    - docker pull $TEST_IMAGE
    - docker images
    - docker-compose -f ./cicd/deploy-tst.yml up -d
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
  only:
    - develop
    


build-jarfile-prod:
  image: https://dockerreg.local:5000/mvn-archaiva:latest
  stage: buildJar
  tags:
    - build
  artifacts:
    paths:
      - ./target/springboot-microservice-discovery*.jar
    expire_in: 1 week
  script:
    - whoami
    - java -version
    - ls -lah
    - mvn clean package -Pnative,prod -DskipTests
    - ls -lah ./target
  only:
    - master

build-dockerfile-prod:
  stage: buildDockerImage
  tags:
    - build
  script:
    - whoami
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker build -f ./cicd/Dockerfile-prod --pull  -t $RELEASE_IMAGE .
    - docker push $RELEASE_IMAGE
  only:
    - master
    
release-on-prod:
  image: https://dockerreg.local:5000/tiangolo-compose
  stage: release
  tags:
    - production
  script:
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker  rm -f discovery  || true
    - docker-compose -f ./cicd/deploy-prod.yml  down || true
    - docker pull $RELEASE_IMAGE
    - docker images
    - docker-compose -f ./cicd/deploy-prod.yml up -d
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
  only:
    - master