#==========Web[Server]==========
server.error.whitelabel.enabled=true
server.http2.enabled=true
server.port=8000
server.servlet.context-path=/
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
server.tomcat.uri-encoding=UTF-8


#==========App[cloud host]==========
app.cloud.discovery-hostname=ms.demo.com
app.cloud.client-hostname=ms.demo.com
#==========Cloud[Security]==========
#فعال کردن امنیت بیسیک
spring.security.basic.enabled=true
spring.security.user.name=discoveryuser
spring.security.user.password=123456
spring.security.user.roles=SYSTEM
#==========Cloud[EurekaServer]==========
#آستانه تحمل خاموش بودن یک سرویس را بالا میبرد به دلیل کم کردن ترافیک شبکه
eureka.server.enable-self-preservation=false
#غیرفعال کردن High Availability via Server Cluster
eureka.server.max-threads-for-peer-replication=0
#فعال کردن داشبورد
eureka.dashboard.enabled=true
eureka.dashboard.path=/dashboard
#نشان می دهد که کلاینت eureka چند بار نیاز به ارسال ضربان قلب به سرور eureka دارد تا نشان دهد که هنوز زنده است.
eureka.instance.lease-renewal-interval-in-seconds=10
#==========Cloud[EurekaClient]==========
#برای اینکه اطلاعات خودش را fetch نکند
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=true
eureka.client.enabled=true
#مسیری که ایوریکا سرور ران و در حال اجراست و کلاینت ها باید خود را به این مسیر معرفی نمایند
eureka.client.service-url.defaultZone=http://discoveryuser:123456@${app.cloud.discovery-hostname}:8000/eureka/
#نشان می دهد که اغلب (در چند ثانیه) اطلاعات رجیستری را از سرور eureka واکشی می کند.
eureka.client.registry-fetch-interval-seconds=5
#چک کردن ضربان قلب کلاینت که آیا کلاینت بالا هست یا نه
eureka.client.healthcheck.enabled=true
#نامی که کلاینت با آن در داشبورد ایوریکا نمایش داده میشود
eureka.instance.instance-id=${spring.application.name}_${random.int(10000,99999)}_tst:${server.port}
#آدرس هاست کلاینت است که لینک داخل داشبود ایوریکا را میسازد
eureka.instance.hostname=${app.cloud.client-hostname}
eureka.instance.non-secure-port=8000
#==========Cloud[AdminServer]==========
#مسیر پیشفرض که کلاینت ها برای معرفی خود باید این مسیر را فراخوانی کنند
spring.boot.admin.context-path=/admin
#ایگنور کردن خودش برای رجیستر شدن در ادمین سرور
spring.boot.admin.discovery.ignored-services=ms-discovery
#فعال کردن همه endpoint ها در actuator. چون بطور پیشفرض فقط health و info فعال هستند
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS
#فعال کردن امنیت
eureka.instance.metadata-map.user.name=${spring.security.user.name}
eureka.instance.metadata-map.user.password=${spring.security.user.password}
#==========Cloud[ConfigServer]==========
#فایل های properties را بصورت لوکال جستجو کند و برای زمانی که از گیت استفاده نمیکنیم این ویژگی باید اضافه شود
#spring.profiles.active=native
#مسیر فایل های properties در classpath پروژه
#spring.cloud.config.server.native.search-locations=classpath:/configserverrepo
#مسیر پیشفرض که کلاینت ها برای معرفی خود باید این مسیر را فراخوانی کنند
spring.cloud.config.server.prefix=/config
#مسیر فایل properties در گیت
#https://ofstack.com/Java/31072/spring-cloud-config-integrates-gitlab-to-build-a-distributed-configuration-center.html
#https://cloud.spring.io/spring-cloud-config/multi/multi__spring_cloud_config_server.html
#https://cloud.spring.io/spring-cloud-static/Hoxton.RC2/reference/html/spring-cloud-hoxton-configprops.html
spring.cloud.config.server.git.uri=https://github.com/motaharinia/springboot-microservice-config.git
#spring.cloud.config.server.git.username=eng.motahari@gmail.com
#spring.cloud.config.server.git.password=12345678
spring.cloud.config.server.git.default-label=develop
spring.cloud.config.server.git.skipSslValidation=true
spring.cloud.config.server.git.timeout=1000
#در هنگام شروع پروژه دیسکاوری بک کپی از تنظیمات را از گیت در مسیرspring.cloud.config.server.git.basedir کپی میکند
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.basedir=target/configserverrepo
spring.cloud.config.server.git.force-pull=true
spring.cloud.config.server.git.delete-untracked-branches=true
#مسیر فایل properties در لوکال سیستم
#spring.cloud.config.server.native.search-locations=file:///c:/configserverrepo
#==========Cloud[GatewayServer]==========
zuul.routes.iam.path=/service/iam/**
zuul.routes.iam.service-id=springboot-microservice-iam
zuul.routes.notification.path=/service/notification/**
zuul.routes.notification.service-id=springboot-microservice-notification
zuul.routes.captchaotp.path=/service/captcha-otp/**
zuul.routes.captchaotp.service-id=springboot-microservice-captchaotp
zuul.routes.ipg.path=/service/ipg/**
zuul.routes.ipg.service-id=springboot-microservice-ipg
zuul.routes.userpanel.path=/service/user-panel/**
zuul.routes.userpanel.service-id=springboot-microservice-userpanel
zuul.routes.catalog.path=/service/catalog/**
zuul.routes.catalog.service-id=springboot-microservice-catalog
zuul.routes.pointtracker.path=/service/point-tracker/**
zuul.routes.pointtracker.service-id=springboot-microservice-pointtracker
zuul.ssl-hostname-validation-enabled=false
zuul.sensitive-headers=
zuul.host.socket-timeout-millis=60000
zuul.host.connect-timeout-millis=60000
ribbon.eureka.enabled=true
ribbon.ReadTimeout=30000
